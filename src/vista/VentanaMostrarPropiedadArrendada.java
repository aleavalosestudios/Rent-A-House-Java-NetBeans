/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import modelo.PropiedadArrendada;
import controlador.PropiedadArrendadaDao;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aleja
 */
public class VentanaMostrarPropiedadArrendada extends javax.swing.JFrame {

    /**
     * Creates new form VentanaMostrarPropiedadArrendada
     */
    public VentanaMostrarPropiedadArrendada() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTodasLasPropiedadesArrendadas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnBuscarPropiedadesArrendadas = new javax.swing.JButton();
        btnMostrarPropiedadesArrendadas = new javax.swing.JButton();
        btnActualizarPropiedadArrendada = new javax.swing.JButton();
        btnEliminarPropiedadArrendada = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Mostrar Propiedades Arrendadas"));

        tablaTodasLasPropiedadesArrendadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nro Propiedad", "Inicio Arriendo", "Termino Arriendo", "Rut Cliente"
            }
        ));
        jScrollPane1.setViewportView(tablaTodasLasPropiedadesArrendadas);

        jLabel1.setText("Propiedades Arrendadas");

        btnBuscarPropiedadesArrendadas.setText("Buscar Propiedades Arrendadas");
        btnBuscarPropiedadesArrendadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPropiedadesArrendadasActionPerformed(evt);
            }
        });

        btnMostrarPropiedadesArrendadas.setText("Mostrar Todas las Propiedades Arrendadas");
        btnMostrarPropiedadesArrendadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarPropiedadesArrendadasActionPerformed(evt);
            }
        });

        btnActualizarPropiedadArrendada.setText("Modificar propiedad Arrendada");
        btnActualizarPropiedadArrendada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarPropiedadArrendadaActionPerformed(evt);
            }
        });

        btnEliminarPropiedadArrendada.setText("Eliminar Propiedad Arrendada");
        btnEliminarPropiedadArrendada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPropiedadArrendadaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscarPropiedadesArrendadas)
                            .addComponent(btnMostrarPropiedadesArrendadas)
                            .addComponent(btnActualizarPropiedadArrendada)
                            .addComponent(btnEliminarPropiedadArrendada))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnBuscarPropiedadesArrendadas)
                        .addGap(18, 18, 18)
                        .addComponent(btnMostrarPropiedadesArrendadas)
                        .addGap(18, 18, 18)
                        .addComponent(btnActualizarPropiedadArrendada)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminarPropiedadArrendada)
                        .addGap(0, 142, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarPropiedadesArrendadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPropiedadesArrendadasActionPerformed
        DefaultTableModel tabla = (DefaultTableModel)tablaTodasLasPropiedadesArrendadas.getModel();
        PropiedadArrendadaDao propiedadArrendadaDao = new PropiedadArrendadaDao();
        
        int nro_propiedad = Integer.parseInt(String.valueOf(JOptionPane.showInputDialog("Ingrese numero de propiedad")));
        
        ArrayList<PropiedadArrendada> listaPropiedadesArrendadas = propiedadArrendadaDao.buscarPropiedadesArrendadas(nro_propiedad);
        
        if(listaPropiedadesArrendadas.isEmpty()){
            JOptionPane.showMessageDialog(this,"Propiedad No Existe");
        }else{
            String [][] datoslistaPropiedadesArrendadas = new String[listaPropiedadesArrendadas.size()][4];

            for (int i = 0; i < listaPropiedadesArrendadas.size(); i++) {
                datoslistaPropiedadesArrendadas[i][0] = String.valueOf(listaPropiedadesArrendadas.get(i).getNro_propiedad());
                datoslistaPropiedadesArrendadas[i][1] = listaPropiedadesArrendadas.get(i).getFecini_arriendo();
                datoslistaPropiedadesArrendadas[i][2] = listaPropiedadesArrendadas.get(i).getFecter_arriendo();
                datoslistaPropiedadesArrendadas[i][3] = String.valueOf(listaPropiedadesArrendadas.get(i).getNumrut_cli());

                tabla.addRow(datoslistaPropiedadesArrendadas[i]);
            }
            tablaTodasLasPropiedadesArrendadas.setModel(tabla);
            
        }
    }//GEN-LAST:event_btnBuscarPropiedadesArrendadasActionPerformed

    private void btnMostrarPropiedadesArrendadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarPropiedadesArrendadasActionPerformed
        DefaultTableModel tabla = (DefaultTableModel)tablaTodasLasPropiedadesArrendadas.getModel();
        PropiedadArrendadaDao propiedadArrendadaDao = new PropiedadArrendadaDao();
        
        ArrayList<PropiedadArrendada> listaPropiedadesArrendadas = propiedadArrendadaDao.todasLasPropiedadesArrendadas();
        
        if(listaPropiedadesArrendadas.isEmpty()){
            JOptionPane.showMessageDialog(this," No Existen Propiedades Arrendadas");
        }else{
            String [][] datoslistaPropiedadesArrendadas = new String[listaPropiedadesArrendadas.size()][4];

            for (int i = 0; i < listaPropiedadesArrendadas.size(); i++) {
                datoslistaPropiedadesArrendadas[i][0] = String.valueOf(listaPropiedadesArrendadas.get(i).getNro_propiedad());
                datoslistaPropiedadesArrendadas[i][1] = listaPropiedadesArrendadas.get(i).getFecini_arriendo();
                datoslistaPropiedadesArrendadas[i][2] = listaPropiedadesArrendadas.get(i).getFecter_arriendo();
                datoslistaPropiedadesArrendadas[i][3] = String.valueOf(listaPropiedadesArrendadas.get(i).getNumrut_cli());

                tabla.addRow(datoslistaPropiedadesArrendadas[i]);
            }
            tablaTodasLasPropiedadesArrendadas.setModel(tabla);
            
        }
    }//GEN-LAST:event_btnMostrarPropiedadesArrendadasActionPerformed

    private void btnActualizarPropiedadArrendadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarPropiedadArrendadaActionPerformed
        
        int filaSeleccionada = tablaTodasLasPropiedadesArrendadas.getSelectedRow();
        
        if(filaSeleccionada == -1){
            JOptionPane.showMessageDialog(this,"Debe Seleccionar Una Fila");
        }else{
            int nro_propiedad = Integer.parseInt(String.valueOf(tablaTodasLasPropiedadesArrendadas.getValueAt(filaSeleccionada,0)));
            String fecini_arriendo = String.valueOf(tablaTodasLasPropiedadesArrendadas.getValueAt(filaSeleccionada,1));
            String fecter_arriendo = String.valueOf(tablaTodasLasPropiedadesArrendadas.getValueAt(filaSeleccionada,2));
            int numrut_cli = Integer.parseInt(String.valueOf(tablaTodasLasPropiedadesArrendadas.getValueAt(filaSeleccionada,3)));

            PropiedadArrendada propiedadArrendada = new PropiedadArrendada(nro_propiedad, fecini_arriendo, fecter_arriendo, numrut_cli);

            PropiedadArrendadaDao propiedadDao = new PropiedadArrendadaDao();

            propiedadDao.actualizarPropiedadArrendada(propiedadArrendada);
            
            JOptionPane.showMessageDialog(this,"Propiedad Arrendada Modificada");
        }
    }//GEN-LAST:event_btnActualizarPropiedadArrendadaActionPerformed

    private void btnEliminarPropiedadArrendadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPropiedadArrendadaActionPerformed
        int filaSeleccionada = tablaTodasLasPropiedadesArrendadas.getSelectedRow();
        
        if(filaSeleccionada == -1){
            JOptionPane.showMessageDialog(this,"Debe Seleccionar Una Fila");
        }else{
            int nro_propiedad = Integer.parseInt(String.valueOf(tablaTodasLasPropiedadesArrendadas.getValueAt(filaSeleccionada,0)));
            String fecini_arriendo = String.valueOf(tablaTodasLasPropiedadesArrendadas.getValueAt(filaSeleccionada,1));
            String fecter_arriendo = String.valueOf(tablaTodasLasPropiedadesArrendadas.getValueAt(filaSeleccionada,2));
            int numrut_cli = Integer.parseInt(String.valueOf(tablaTodasLasPropiedadesArrendadas.getValueAt(filaSeleccionada,3)));

            PropiedadArrendada propiedadArrendada = new PropiedadArrendada(nro_propiedad, fecini_arriendo, fecter_arriendo, numrut_cli);

            PropiedadArrendadaDao propiedadDao = new PropiedadArrendadaDao();

            propiedadDao.eliminarPropiedadArrendada(propiedadArrendada);
            
            JOptionPane.showMessageDialog(this,"Propiedad Arrendada eliminada");
        }
    }//GEN-LAST:event_btnEliminarPropiedadArrendadaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaMostrarPropiedadArrendada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaMostrarPropiedadArrendada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaMostrarPropiedadArrendada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaMostrarPropiedadArrendada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaMostrarPropiedadArrendada().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarPropiedadArrendada;
    private javax.swing.JButton btnBuscarPropiedadesArrendadas;
    private javax.swing.JButton btnEliminarPropiedadArrendada;
    private javax.swing.JButton btnMostrarPropiedadesArrendadas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaTodasLasPropiedadesArrendadas;
    // End of variables declaration//GEN-END:variables
}

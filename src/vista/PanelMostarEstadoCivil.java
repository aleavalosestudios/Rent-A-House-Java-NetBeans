/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;
import modelo.EstadoCivil;
import controlador.EstadoCivilDao;
import controlador.MisMetodos;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author aleja
 */
public class PanelMostarEstadoCivil extends javax.swing.JPanel {
    DefaultTableModel tabla;
    EstadoCivil estadoCivil;
    EstadoCivilDao estadoCivilDao = new EstadoCivilDao();
    MisMetodos misMetodos = new MisMetodos();
    /**
     * Creates new form PanelMostarEstadoCivil
     */
    public PanelMostarEstadoCivil() {
        initComponents();
        btnMostrarTodosLosEstadosCiviles.doClick();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnIngresarNuevoEstadoCivil = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTodosLosEstadosCiviles = new javax.swing.JTable();
        btnBuscarEstadoCivil = new javax.swing.JButton();
        btnMostrarTodosLosEstadosCiviles = new javax.swing.JButton();
        btnActualizarEstadoCivil = new javax.swing.JButton();
        btnEliminarEstadoCivil = new javax.swing.JButton();

        btnIngresarNuevoEstadoCivil.setText("Nuevo Estado Civil");
        btnIngresarNuevoEstadoCivil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarNuevoEstadoCivilActionPerformed(evt);
            }
        });

        jLabel1.setText("Estado Civil");

        tablaTodosLosEstadosCiviles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Estado Civil", "Estado Civil"
            }
        ));
        jScrollPane1.setViewportView(tablaTodosLosEstadosCiviles);

        btnBuscarEstadoCivil.setText("Buscar Estado Civil");
        btnBuscarEstadoCivil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarEstadoCivilActionPerformed(evt);
            }
        });

        btnMostrarTodosLosEstadosCiviles.setText("Mostrar Estados Civiles");
        btnMostrarTodosLosEstadosCiviles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarTodosLosEstadosCivilesActionPerformed(evt);
            }
        });

        btnActualizarEstadoCivil.setText("Actualizar Estado Civil");
        btnActualizarEstadoCivil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarEstadoCivilActionPerformed(evt);
            }
        });

        btnEliminarEstadoCivil.setText("Eliminar Estado Civil");
        btnEliminarEstadoCivil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarEstadoCivilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscarEstadoCivil)
                            .addComponent(btnIngresarNuevoEstadoCivil)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnMostrarTodosLosEstadosCiviles)
                        .addGap(18, 18, 18)
                        .addComponent(btnActualizarEstadoCivil)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminarEstadoCivil)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnIngresarNuevoEstadoCivil)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscarEstadoCivil)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMostrarTodosLosEstadosCiviles)
                    .addComponent(btnActualizarEstadoCivil)
                    .addComponent(btnEliminarEstadoCivil))
                .addContainerGap(34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarNuevoEstadoCivilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarNuevoEstadoCivilActionPerformed
        VentanaIngresarEstadoCivil ventanaIngresarEstadoCivil = new VentanaIngresarEstadoCivil();
        misMetodos.abrirVentana(ventanaIngresarEstadoCivil,"Ingreso Nuevo Estado Civil");
    }//GEN-LAST:event_btnIngresarNuevoEstadoCivilActionPerformed

    private void btnBuscarEstadoCivilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarEstadoCivilActionPerformed
        tabla = (DefaultTableModel)tablaTodosLosEstadosCiviles.getModel();
        
        String desc_estadoCivil = JOptionPane.showInputDialog(this, "Ingrese Nombre Estado Civil a Buscar");
        ArrayList<EstadoCivil> listaEstadoCivil = estadoCivilDao.buscarEstadoCivil(desc_estadoCivil);

        misMetodos.tablaLimpiar(tablaTodosLosEstadosCiviles);
        

        if (listaEstadoCivil.isEmpty()){
            JOptionPane.showMessageDialog(this,"Estado Civil No Existe");
        }else{

            String [][] datoslistasEstadoCivil = new String[listaEstadoCivil.size()][2];

            for (int i = 0; i < listaEstadoCivil.size(); i++) {
                datoslistasEstadoCivil[i][0] = String.valueOf(listaEstadoCivil.get(i).getId_EstCivil());
                datoslistasEstadoCivil[i][1] = String.valueOf(listaEstadoCivil.get(i).getDesc_EstCivil());

                tabla.addRow(datoslistasEstadoCivil[i]);
            }
        }
        tablaTodosLosEstadosCiviles.setModel(tabla);

    }//GEN-LAST:event_btnBuscarEstadoCivilActionPerformed

    private void btnMostrarTodosLosEstadosCivilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarTodosLosEstadosCivilesActionPerformed
        tabla = (DefaultTableModel)tablaTodosLosEstadosCiviles.getModel();
        
        ArrayList<EstadoCivil> listaEstadoCivil = estadoCivilDao.todosLosEstadoCivil();

        misMetodos.tablaLimpiar(tablaTodosLosEstadosCiviles);

        if (listaEstadoCivil.isEmpty()){
            JOptionPane.showMessageDialog(this,"No Existen Estados Civiles");
        }else{
            String [][] datoslistasEstadoCivil = new String[listaEstadoCivil.size()][2];

            for (int i = 0; i < listaEstadoCivil.size(); i++) {
                datoslistasEstadoCivil[i][0] = String.valueOf(listaEstadoCivil.get(i).getId_EstCivil());
                datoslistasEstadoCivil[i][1] = String.valueOf(listaEstadoCivil.get(i).getDesc_EstCivil());

                tabla.addRow(datoslistasEstadoCivil[i]);
            }
        }
        tablaTodosLosEstadosCiviles.setModel(tabla);
    }//GEN-LAST:event_btnMostrarTodosLosEstadosCivilesActionPerformed

    private void btnActualizarEstadoCivilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarEstadoCivilActionPerformed
        int filaSeleccionada = tablaTodosLosEstadosCiviles.getSelectedRow();

        if(filaSeleccionada == -1){
            JOptionPane.showMessageDialog(this,"Debe Seleccionar Una Fila");
        }else{
            int id_estadoCivil = Integer.parseInt(String.valueOf(tablaTodosLosEstadosCiviles.getValueAt(filaSeleccionada,0)));
            String desc_estadoCivil = String.valueOf(tablaTodosLosEstadosCiviles.getValueAt(filaSeleccionada,1));

            estadoCivil = new EstadoCivil(id_estadoCivil, desc_estadoCivil);
            estadoCivilDao.actualizarEstadoCivil(estadoCivil);

            JOptionPane.showMessageDialog(this,"Estado Civil Actualizado");
        }
    }//GEN-LAST:event_btnActualizarEstadoCivilActionPerformed

    private void btnEliminarEstadoCivilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarEstadoCivilActionPerformed
        int filaSeleccionada = tablaTodosLosEstadosCiviles.getSelectedRow();

        if(filaSeleccionada == -1){
            JOptionPane.showMessageDialog(this,"Debe Seleccionar Una Fila");
        }else{
            int id_estadoCivil = Integer.parseInt(String.valueOf(tablaTodosLosEstadosCiviles.getValueAt(filaSeleccionada,0)));
            String desc_estadoCivil = String.valueOf(tablaTodosLosEstadosCiviles.getValueAt(filaSeleccionada,1));

            estadoCivil = new EstadoCivil(id_estadoCivil, desc_estadoCivil);            
            estadoCivilDao.eliminarEstadoCivil(estadoCivil);

            JOptionPane.showMessageDialog(this,"Estado Civil Eliminado");

            btnMostrarTodosLosEstadosCiviles.doClick();
        }
    }//GEN-LAST:event_btnEliminarEstadoCivilActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarEstadoCivil;
    private javax.swing.JButton btnBuscarEstadoCivil;
    private javax.swing.JButton btnEliminarEstadoCivil;
    private javax.swing.JButton btnIngresarNuevoEstadoCivil;
    private javax.swing.JButton btnMostrarTodosLosEstadosCiviles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaTodosLosEstadosCiviles;
    // End of variables declaration//GEN-END:variables
}
